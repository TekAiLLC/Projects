spring.application.name=CloudKitchenOrderService


# H2 Internal Database configurations
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
logging.level.org.h2=DEBUG

# Hibernate / JPA properties

# change below to "create", to delete old data nd create tabless every time app is started.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

# Database configurations

# to use H2 as persistent DB
spring.datasource.url=jdbc:h2:file:~/demo 

# to use H2 as in memory DB ( this will make the data to be deleted on app restarts)
# spring.datasource.url=jdbc:h2:mem:orderdb

spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Server Address and listening port.
server.address=127.0.0.1
server.port=8080

# logging

# Set the root logger level (controls all framework logging)
logging.level.root=INFO

# Enable DEBUG level for all Spring packages
# Make this to DEBUG to debug any spring related errors.
logging.level.org.springframework=INFO

# To avoid some un-ncessary spring boot logging ( condition evaluation report)
spring.main.log-startup-info=false
logging.level.org.springframework.boot.autoconfigure=OFF
# More specific Spring module logging
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.transaction=DEBUG
logging.level.org.springframework.orm.jpa=DEBUG
logging.level.org.springframework.security=DEBUG

# Hibernate SQL logging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Add below to see the parameters as well.
# logging.level.org.hibernate=TRACE

# Request/response logging through web filters
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG

# 
# spring.jackson.property-naming-strategy=LOWER_CAMEL_CASE

